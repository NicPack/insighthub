services:
  db:
    image: postgres:14.19-alpine3.22
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./insighthub-backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      POSTGRES_SERVER: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      TAVILY_API_KEY: ${TAVILY_API_KEY}
    working_dir: /app
    #entrypoint: ["bash", "./entrypoint.sh"]
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./insighthub-backend:/app
    command: bash -c "python -m app.core.db && uvicorn app.main:app --host 0.0.0.0 --port 8000"

  frontend:
    build:
      context: ./insighthub-frontend
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    env_file:
      - .env
    environment:
      BACKEND_URL: http://backend:8000
    depends_on:
      - backend

volumes:
  postgres_data:
